{"version":3,"sources":["routes/api.ts","routes/atom.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","data","type","series","name","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","width","background","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","yaxis","show","xaxis","Container","styled","div","PriceInfo","Price","quotes","USD","percent_change_24h","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","Backbtn","button","props","textColor","accentColor","Overview","OverviewItem","Description","p","Header","header","Loader","span","Title","h1","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","refetchInterval","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","toFixed","description","total_supply","max_supply","path","SwitchTheme","bgColor","CoinList","ul","li","Img","img","Coins","recentTheme","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","lightTheme","GobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.cb73f5a1.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1/`;\r\n\r\nexport async function fetchCoins() {\r\n  return fetch(\"https://api.coinpaprika.com/v1/coins\").then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","//first Atom\r\n\r\nimport { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","import ApexChart from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { fetchCoinHistory } from \"./api\";\r\nimport { isDarkAtom } from \"./atom\";\r\n\r\ninterface CharProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: CharProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart....\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => ({\r\n                x: price.time_close,\r\n                y: [price.open, price.high, price.low, price.close],\r\n              })),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: { mode: isDark ? \"dark\" : \"light\" },\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 500,\r\n              width: 500,\r\n\r\n              background: \"transparent\",\r\n              animations: {\r\n                enabled: true,\r\n                easing: \"easeinout\",\r\n                speed: 800,\r\n                animateGradually: {\r\n                  enabled: true,\r\n                  delay: 150,\r\n                },\r\n                dynamicAnimation: {\r\n                  enabled: true,\r\n                  speed: 350,\r\n                },\r\n              },\r\n            },\r\n\r\n            yaxis: { show: false },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinTickers } from \"./api\";\r\ninterface CharProps {\r\n  coinId: string;\r\n}\r\ninterface info {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: number;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\nconst PriceInfo = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #f5f6fa;\r\n  color: black;\r\n  margin-bottom: 15px;\r\n  border-radius: 25px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0px 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nfunction Price({ coinId }: CharProps) {\r\n  const { isLoading, data } = useQuery<info>([\"price\", coinId], () =>\r\n    fetchCoinTickers(coinId)\r\n  );\r\n  return (\r\n    <Container>\r\n      <PriceInfo>\r\n        <span>Price:</span>\r\n        <span>${data?.quotes.USD.price}</span>\r\n      </PriceInfo>\r\n      <PriceInfo>\r\n        <span>Max Change rate in last 24h:</span>\r\n        <span>{data?.quotes.USD.percent_change_24h}%</span>\r\n      </PriceInfo>\r\n      <PriceInfo>\r\n        <span>Change rate ( last 30 Minute )</span>\r\n        <span>{data?.quotes.USD.percent_change_30m}%</span>\r\n      </PriceInfo>\r\n      <PriceInfo>\r\n        <span>Change rate ( last 1 Hours )</span>\r\n        <span>{data?.quotes.USD.percent_change_1h}%</span>\r\n      </PriceInfo>\r\n      <PriceInfo>\r\n        <span>Change rate ( last 6 Hours )</span>\r\n        <span>{data?.quotes.USD.percent_change_6h}%</span>\r\n      </PriceInfo>\r\n      <PriceInfo>\r\n        <span>Change rate ( last 12 Hours )</span>\r\n        <span>{data?.quotes.USD.percent_change_12h}%</span>\r\n      </PriceInfo>\r\n      <PriceInfo>\r\n        <span>Change rate ( last 24 Hours )</span>\r\n        <span>{data?.quotes.USD.percent_change_24h}%</span>\r\n      </PriceInfo>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  Link,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Backbtn = styled.button`\r\n  position: absolute;\r\n  top: 50px;\r\n  background: transparent;\r\n  border: none;\r\n  color: ${(props) => props.theme.textColor};\r\n  background-color: ${(props) => props.theme.accentColor};\r\n  padding: 20px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.textColor};\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface Itag {\r\n  coin_counter: number;\r\n  ico_counter: number;\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  contracts: object;\r\n  parent: object;\r\n  //Object로 만들어진 array\r\n  tags: Itag[];\r\n  team: object;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: number;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface ICoinProps {}\r\n\r\nfunction Coin({}: ICoinProps) {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      //5초마다 업데이트\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  // const [Loading, SetLoading] = useState(true);\r\n  // const [info, setInfo] = useState<InfoData>();\r\n  // const [priceInfo, setPriceinfo] = useState<PriceData>();\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     //코인의 정보를 담은 페이지\r\n  //     const infoData = await (\r\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\r\n  //     ).json();\r\n\r\n  //     //코인의 가격\r\n  //     const priceData = await (\r\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n  //     ).json();\r\n\r\n  //     setInfo(infoData);\r\n  //     setPriceinfo(priceData);\r\n  //     SetLoading(false);\r\n  //   })();\r\n  // }, [coinId]);\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Backbtn>\r\n            <Link to={\"/\"}>←</Link>\r\n          </Backbtn>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"./api\";\r\nimport { isDarkAtom } from \"./atom\";\r\n\r\nconst SwitchTheme = styled.button`\r\n  background: none;\r\n  border: none;\r\n  background-color: ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  padding: 15px;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CoinList = styled.ul``;\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    transition: color 0.2s ease-in-out;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.textColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.textColor};\r\n  font-size: 48px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const recentTheme = useRecoilValue(isDarkAtom);\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n  // const [Loading, SetLoading] = useState(true);\r\n  // //시작될 떄만 실행\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     console.log(json);\r\n  //     setCoins(json.slice(0, 100));\r\n  //     SetLoading(false);\r\n  //   })();\r\n  // }, []);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coin</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>Coin</Title>\r\n        <SwitchTheme onClick={toggleDarkAtom}>\r\n          {recentTheme ? \"Light\" : \"Dark\"}\r\n        </SwitchTheme>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader> Loading ... </Loader>\r\n      ) : (\r\n        <CoinList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Coin from \"./Coin\";\r\nimport Coins from \"./Coins\";\r\n\r\ninterface IRouterProps {}\r\nfunction Router({}: IRouterProps) {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\nexport const darkTheme: DefaultTheme = {\r\n  textColor: \"#9c88ff\",\r\n  bgColor: \"#353b48\",\r\n  accentColor: \"tomato\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  textColor: \"black\",\r\n  bgColor: \"whitesmoke\",\r\n  accentColor: \"tomato\",\r\n};\r\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./routes/Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./routes/atom\";\n\nconst GobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\n html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\nbody{\n  font-family: 'Source Sans Pro' , sans-serif; \n  background-color: ${(props) => props.theme.bgColor};\n  color: white;\n}\na{\n  text-decoration: none;\n  color: inherit;\n}\n\n*{\n  box-sizing: border-box;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true}></ReactQueryDevtools>\n      </ThemeProvider>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { darkTheme } from \"./theme\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <ThemeProvider theme={darkTheme}>\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}